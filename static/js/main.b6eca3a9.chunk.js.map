{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","api","axois","create","baseURL","params","api_key","language","movieApi","get","append_to_response","term","query","TVApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","OverView","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyle","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6eca3a9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n  :first-child {\n    margin-top: 30px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ])\n};\n\n/*\n  PropTypes 종류\n\n  - array: 배열\n  - arrayOf: 특정 propType으로 이루어진 배열\n  - bool: true or false\n  - func: 함수\n  - number: 숫자\n  - object 객체\n  - string: 문자열\n  - symbol: ES6의 Symbol\n  - node: 랜더링 할 수 있는 모든 것 (숫자, 문자열, JSX코드 등)\n  - instanceOf: 특정 클래스의 인스턴스 (ex: instanceOf(MyClass))\n  - oneOf([\"dog\", \"cat\"]): 주어진 배열 element 중 값 하나\n  - oneOfType([PropTypes.string, PropTypes.number]): 주어진 배열 안의 Type 중 하나\n  - objectOf(React.PropTypes.number): 객체의 모든 키 값이 인자로 주어진 PropType인 객체\n  - shape({name: PropTypes.string, num: PropTypes.number}): 주어진 스키마를 가진 객체\n  - any: 아무 종류\n*/\n\nexport default Section;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  margin-top: 100px;\n  font-size: 32px;\n`;\n\nexport default () => (\n  <Container>\n    {/* 시각 장애인의 screen reader을 위해 설정 */}\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>  \n);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 50px;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity .1s linear;\n  margin-bottom: 5px;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  top: 160px;\n  right: 5px;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/noPosterSmall.png\").default} />\n        <Rating><span role=\"img\" aria-label=\"review rating\">⭐</span>{\" \"}{rating}/10</Rating>\n        <Title>{title.length > 18 ? `${title.substring(0,18)}...` : title}</Title>\n        <Year>{year}</Year>\n      </ImageContainer>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string, \n  title: PropTypes.string.isRequired, \n  rating: PropTypes.number, \n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\n\nimport Section from '../../Components/Section';\nimport Loader from '../../Components/Loader';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst HomePresenter = ({\n  nowPlaying,\n  upcoming,\n  popular,\n  error,\n  loading,\n}) => (\n  <>\n    <Helmet>\n      <title>Movies | Bongflix</title>\n    </Helmet>\n    {loading ? <Loader /> : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => \n              <Poster \n                key={movie.id}\n                id={movie.id} \n                imageUrl={movie.poster_path} \n                title={movie.original_title} \n                rating={movie.vote_average} \n                year={movie.release_date && movie.release_date.substring(0, 4)} \n                isMovie={true} \n              />\n            )}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming\">\n            {upcoming.map(movie => \n              <Poster \n                key={movie.id}\n                id={movie.id} \n                imageUrl={movie.poster_path} \n                title={movie.original_title} \n                rating={movie.vote_average} \n                year={movie.release_date && movie.release_date.substring(0, 4)} \n                isMovie={true} \n              />\n            )}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular\">\n            {popular.map(movie => \n              <Poster \n                key={movie.id}\n                id={movie.id} \n                imageUrl={movie.poster_path} \n                title={movie.original_title} \n                rating={movie.vote_average} \n                year={movie.release_date && movie.release_date.substring(0, 4)} \n                isMovie={true} \n              />\n            )}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n}\n\nexport default HomePresenter;","import axois from \"axios\";\n\n// call api\nconst api = axois.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params : {\n    api_key: \"0893f8c7df602588a4cbc8304965ecab\",\n    language: \"en-US\"\n  }\n});\n\n// movie datas in api\nexport const movieApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id => api.get(`movie/${id}`, {\n    params: {\n      append_to_response: \"videos\"\n    }\n  }),\n  search: term => api.get(\"search/movie\", {\n    params: {\n      query: term\n    }\n  })\n}\n\n// tv show datas in api\nexport const TVApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  tvDetail: id => api.get(`tv/${id}`, {\n    params: {\n      append_to_response: \"videos\"\n    }\n  }),\n  search: term => api.get(\"search/tv\", {\n    params: {\n      query: term\n    }\n  })\n}","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from 'react';\nimport HomePresenter from \"./HomePresenter\";\nimport { movieApi } from '../../api';\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const { data: { results: nowPlaying } } = await movieApi.nowPlaying();\n      const { data: { results: upcoming } } = await movieApi.upcoming();\n      const { data: { results: popular } } = await movieApi.popular();\n      \n      this.setState({   // state의 데이터를 api로 얻은 데이터로 바꿔줌\n        nowPlaying,\n        upcoming,\n        popular\n      })\n    } catch {\n      this.setState({\n        error: \"Can't find movies information\"\n      })\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter \n        nowPlaying={nowPlaying} \n        upcoming={upcoming} \n        popular={popular} \n        error={error} \n        loading={loading} />\n    );\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\n\nimport Section from '../../Components/Section';\nimport Loader from '../../Components/Loader';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst TVPresenter = ({\n  topRated,\n  popular,\n  airingToday,\n  error,\n  loading,\n}) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Bongflix</title>\n    </Helmet>\n    {loading ? <Loader /> : (\n    <Container>\n      {topRated && topRated.length > 0 && (\n        <Section title=\"Top Rated TV Shows\">\n          {topRated.map(show => \n            <Poster \n              key={show.id}\n              id={show.id} \n              imageUrl={show.poster_path} \n              title={show.original_name} \n              rating={show.vote_average} \n              year={show.first_air_date && show.first_air_date.substring(0, 4)} \n              isMovie={false} \n            />\n          )}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular TV Shows\">\n          {popular.map(show => \n            <Poster \n              key={show.id}\n              id={show.id} \n              imageUrl={show.poster_path} \n              title={show.original_name} \n              rating={show.vote_average} \n              year={show.first_air_date && show.first_air_date.substring(0, 4)} \n              isMovie={false} \n            />\n          )}\n        </Section>\n      )}\n      {airingToday && airingToday.length > 0 && (\n        <Section title=\"Airing Today\">\n          {airingToday.map(show => \n            <Poster \n              key={show.id}\n              id={show.id} \n              imageUrl={show.poster_path} \n              title={show.original_name} \n              rating={show.vote_average} \n              year={show.first_air_date && show.first_air_date.substring(0, 4)} \n              isMovie={false} \n            />\n          )}\n        </Section>\n      )}\n      {error && <Message text={error} color=\"#e74c3c\" />}\n    </Container>)}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n}\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from 'react';\nimport TVPresenter from \"./TVPresenter\";\nimport { TVApi } from '../../api';\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const { data: { results: topRated } } = await TVApi.topRated();\n      const { data: { results: popular } } = await TVApi.popular();\n      const { data: { results: airingToday } } = await TVApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday\n      })\n    } catch {\n      this.setState({\n        error: \"Can't find TV information\"\n      })\n    } finally {\n      this.setState({\n        loading: false\n      })\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter \n        topRated={topRated} \n        popular={popular} \n        airingToday={airingToday} \n        error={error} \n        loading={loading} />\n    );\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\n\nimport Section from '../../Components/Section';\nimport Loader from '../../Components/Loader';\nimport Message from '../../Components/Message'\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-top: 30px;\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  error,\n  loading,\n  searchTerm,\n  handleSubmit,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Bongflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm} />\n    </Form>\n    {loading ? (<Loader />) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => \n              <Poster \n                key={movie.id}\n                id={movie.id} \n                imageUrl={movie.poster_path} \n                title={movie.original_title} \n                rating={movie.vote_average} \n                year={movie.release_date && movie.release_date.substring(0, 4)} \n                isMovie={true} \n              />\n            )}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => \n              <Poster \n                key={show.id}\n                id={show.id} \n                imageUrl={show.poster_path} \n                title={show.original_name} \n                rating={show.vote_average} \n                year={show.first_air_date && show.first_air_date.substring(0, 4)} \n                isMovie={false} \n              />\n            )}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n        {movieResults && tvResults && movieResults.length === 0 && tvResults.length === 0 && <Message text=\"Nothing Found\" color=\"#95a5a6\" />}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from 'react';\n\nimport { movieApi, TVApi } from '../../api';\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm(searchTerm);\n    }\n  };\n\n  updateTerm = event => {\n    const { target: { value } } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async (term) => {\n    this.setState({ loading: true });\n    try {\n      const { data: { results: movieResults } } = await movieApi.search(term);\n      const { data: { results: tvResults } } = await TVApi.search(term);\n      \n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter \n        movieResults={movieResults} \n        tvResults={tvResults} \n        searchTerm={searchTerm} \n        error={error} \n        loading={loading} \n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\n\nimport Loader from '../../Components/Loader';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  background-image: url(${props => props.bgImage});\n  background-size: cover;\n  background-position: center center;\n  filter: blur(3px);\n  opacity: 0.5;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  height: 100%;\n  display:flex;\n\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  z-index: 1;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0px 10px;\n`;\n\nconst OverView = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({\n  result,\n  error,\n  loading,\n}) => (loading ? (\n  <>\n    <Helmet>\n      <title>Loading | Bongflix</title>\n    </Helmet>\n    <Loader />\n  </>\n  ) : (\n  <Container>\n    <Helmet>\n      <title>{result.original_title ? result.original_title : result.original_name}{\" \"}| Bongflix</title>\n    </Helmet>\n    <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\n    <Content>\n      <Cover bgImage={result.poster_path ? `https://image.tmdb.org/t/p/w300${result.poster_path}` : require(\"../../assets/noPosterSmall.png\").default} />\n      <Data>\n        <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n        <ItemContainer>\n          <Item>{result.release_date ? result.release_date.substring(0,4) : result.first_air_date.substring(0,4)}</Item>\n          <Divider>•</Divider>\n          <Item>{result.runtime ? result.runtime : result.episode_run_time[0]} min</Item>\n          <Divider>•</Divider>\n          <Item>{result.genres && result.genres.map((genre, index) => index === result.genres.length - 1 ? genre.name : `${genre.name}/`)}</Item>\n        </ItemContainer>\n        <OverView>{result.overview}</OverView>\n      </Data>\n    </Content>\n  </Container>\n));\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n}\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from 'react';\nimport { movieApi, TVApi } from '../../api';\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const { location: { pathname } } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")  // includes(searchContent) : searchContent를 찾아 boolean으로 반환하는 Method\n    };\n  }\n\n  async componentDidMount() {\n    const { match: { params: { id } }, history: { push } } = this.props;   // Detail의 id 가져오기\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    \n    if (isNaN(parsedId)) {   // id가 숫자인지 아닌지 판별\n      return push(\"/\");   // id가 숫자가 아니면 Home으로 이동\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await movieApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await TVApi.tvDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return (\n      <DetailPresenter \n        result={result} \n        error={error} \n        loading={loading} />\n    );\n  }\n}","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from \"styled-components\"\n\n// It make CSS locally\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n// withRouter : Route로부터 props를 가져올 수 있음\nexport default withRouter(({ location: { pathname }}) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from 'react';\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"../Routes/Home\";\nimport TV from \"../Routes/TV\";\nimport Search from \"../Routes/Search\";\nimport Detail from \"../Routes/Detail\";\nimport Header from \"./Header\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      {/* Switch : 한번에 오직 하나의 Route만 Render하라 */}\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/tv/:id\" component={Detail} />\n        {/* 일치하는 Route가 없다면 Redirect 해라 */}\n        <Redirect from=\"*\" to=\"/\" />  \n      </Switch>\n    </>\n  </Router>\n)","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyle = createGlobalStyle`\n  ${reset};\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 12px;\n    background-color: rgba(20,20,20,1);\n    color: white;\n    padding-top: 50px;\n  }\n`;\n\nexport default globalStyle;","import React from \"react\";\nimport Router from './Router';\nimport GlobalStyles from \"./GlobalStyles\"\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}